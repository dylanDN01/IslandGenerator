[gd_scene load_steps=9 format=2]

[ext_resource path="res://World.gd" type="Script" id=1]
[ext_resource path="res://tarrain.material" type="Material" id=2]
[ext_resource path="res://Player.gd" type="Script" id=3]

[sub_resource type="CapsuleShape" id=1]
height = 2.0

[sub_resource type="CapsuleMesh" id=2]
mid_height = 2.0

[sub_resource type="Shader" id=3]
code = "shader_type spatial;

uniform vec4 out_color2 : hint_color = vec4(0.0, 0.2, 1.0, 1.0);
uniform float amount : hint_range(0.2, 1.5) = 0.8;
uniform float beer_factor = 0.2;

float generateOffset(float x, float z, float val1, float val2, float time){
	float speed = 1.0;
	
	float radiansX = ((mod(x + z * x + val1, amount) / amount) + (time * speed) * mod(x * 0.8 + z, 1.5)) * 2.0 * 3.14;
	float radiansZ = ((mod(val2 * (z * x + x * z), amount) / amount) + (time * speed) * 2.0 * mod(x,2.0)) * 2.0 * 3.14;
	
	return amount * 0.5 * (sin(radiansZ) + cos(radiansX));
}

vec3 applyDistortion(vec3 vertex, float time){
	float xd = generateOffset(vertex.x, vertex.z, 0.2, 0.1, time);
	float yd = generateOffset(vertex.x, vertex.z, 0.1, 0.3, time);
	float zd = generateOffset(vertex.x, vertex.z, 0.15, 0.2, time);
	return vertex + vec3(xd, yd, zd);
}

void vertex(){
	VERTEX = applyDistortion(VERTEX, TIME * 0.1);
}

void fragment(){
	
	NORMAL = normalize(cross(dFdx(VERTEX), dFdy(VERTEX)));
	
	METALLIC = 0.6;
	SPECULAR = 0.5;
	ROUGHNESS = 0.2;
	
	ALBEDO = out_color2.xyz;
	
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).r;
	
	depth = depth * 2.0 - 1.0;
	depth = PROJECTION_MATRIX[3][2] / (depth + PROJECTION_MATRIX[2][2]);
	depth = depth + VERTEX.z;
	
	depth = exp(-depth * beer_factor);
	ALPHA = clamp(1.0 - depth, 0.0, 1.0);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/out_color2 = Color( 0.207843, 0.65098, 0.682353, 1 )
shader_param/amount = 1.061
shader_param/beer_factor = 0.2

[sub_resource type="PlaneMesh" id=5]
material = SubResource( 4 )
size = Vector2( 400, 400 )
subdivide_width = 50
subdivide_depth = 50

[node name="World" type="Spatial"]
script = ExtResource( 1 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( -0.999725, 0.00338312, 0.0232274, 0, 0.989559, -0.144132, -0.0234725, -0.144092, -0.989286, 1.15422e-16, 13.443, 2.95384e-07 )

[node name="Player" type="KinematicBody" parent="." groups=[
"Player",
]]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 56.2988, 0 )
script = ExtResource( 3 )

[node name="Rotation_Helper" type="Spatial" parent="Player"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.756514 )

[node name="Camera" type="Camera" parent="Player/Rotation_Helper"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.59009, 0.543325 )

[node name="CollisionShape" type="CollisionShape" parent="Player"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, 0, 0 )
shape = SubResource( 1 )

[node name="PlayerMesh" type="MeshInstance" parent="Player"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, 0, 0 )
mesh = SubResource( 2 )
material/0 = ExtResource( 2 )

[node name="Water" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.232426, 0 )
mesh = SubResource( 5 )
material/0 = null
